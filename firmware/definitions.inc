; Макросы и определения

; Регистры GPIORx
; GPIOR0.0 - флаг переноса BCD
; GPIOR0.1 - используется как вспомогательный флаг при опросе клавиатуры
; GPIOR0.2 - устанавливается в 1 каждую 1/8 долю секунды
; GPIOR0.3 - ...каждую секунду
; GPIOR0.4 - ...минуту
; GPIOR0.5 - ...час
; GPIOR0.6 - ...день
; GPIOR0.7 - если 0 - обычное рисовение, 1 - инверсное

;------- Константы
.equ num_mode = 0x02
.equ sec_part = 8
.equ OCR2A_val = 127
.equ TimCntVal = 32
;.equ KbdDelay = 16 ; Период в 1/8 секундных интервалах, по прошествии которого кнопка считается нажатой длительно
; определения нот для музыки
; 4-я октава
.equ o4C = 241	; до
.equ o4Cd = 225	; до-диез
.equ o4D = 211	; ре
.equ o4Dd = 201	; ре-диез
.equ o4E = 190	; ми
.equ o4F = 180	; фа
.equ o4Fd = 170	; фа-диез
.equ o4G = 160	; соль
.equ o4Gd = 151	; соль-диез
.equ o4A = 142	; ля
.equ o4Ad = 133	; ля-диез
.equ o4H = 125	; си
; 5-я октава
.equ o5C = 118	; до
.equ o5Cd = 111	; до-диез
.equ o5D = 105	; ре
.equ o5Dd = 100	; ре-диез
.equ o5E = 94	; ми
.equ o5F = 89	; фа
.equ o5Fd = 84	; фа-диез
.equ o5G = 78	; соль
.equ o5Gd = 73	; соль-диез
.equ o5A = 69	; ля
.equ o5Ad = 63	; ля-диез
.equ o5H = 60	; си

;Длительность
.equ T1 = 208	; Секунда (такт)
.equ T1_2 = T1/2	; 1/2
.equ T1_4 = T1/4	; 1/4
.equ T1_8 = T1/8	; 1/8
.equ T1_16 = T1/16	; 1/16

;------- Определения
; r0,r1 - используются при аппаратном mul
; r2, r3, r4, r5, r6 - свободны

;.def kbd_delay_cnt = r7 ; счетчик задержки нажатия кнопки

.def kbd = r8	; Битовая маска нажатых кнопок
.def led_timer=r9	; Таймер подсветки (1/8 секундные интерваллы)
.def sec_part_cnt = r10 ; счетчик долей секунды

;.def kbd_delay_press = r11 ; Битовая маска кнопок, нажатых более периода Kbd_Delay
.def kbd_prev = r12	; Битовая маска нажатых кнопок предыдущего такта
.def kbd_press = r13 ; Нажатые кнопки (из 1 в 0)
.def kbd_release = r14 ; Отпущенные кнопки (из 0 в 1)

; r15 - свободен

.def tmp=r16	; Temp
.def tmp1=r17
.def lcd_y=r18	; Координата Y

.def mode=r19	; Режим работы: 0 - часы (отображение даты-времени), 1 - настройка даты, времени,
				; 2 - таймер, 3 - будильник

; r20 - используется в подпрограммах для дисплея
.def lcd_x = r21	; Координата X
.def wflags = r22	; Разные флаги: 
; 0 - масштабирование x2, 
; 1 - сдвиг символа (для 7-ми сегментного)
; 2 - флаг используется при масштабируемом рисовании
; 3 - флаг включенного звука, используется при переходе в сон. Когда работает звук - проц не уходит в сон.
; 4 - флаг срабатывания прерывания RTC
; 5 - флаг проигрывания музыки
; 6 - флаг будильника 1-включен, 0-выключен

.def refresh = r23	; Регистр с флагами обновления
; Биты:
; 0 - надо обновить минуты
; 1 - часы
; 2 - число/день недели
; 3 - месяц
; 4 - год
; 5 - обновление таймера/будильника
; 6 - таймер запущен(1)/остановлен(0)
; 7 - флаг отработки ЦНХ
; т.к. рисование идет не быстрее чем раз в секунду, то секунды обновляются каждый такт и так
.def mode_tmp=r24 ; Для режима 1 - здесь хранится текущий редактируемый параметр (час, минута, секунда и т.д.)
				  ; 0 - час, 1 - минута, 2 - секунда, 3 - число, 4 - день недели, 5 - месяц, 6 - год (пока так)
				  ; этот же параметр и указывает какая часть рисуемой даты-времени будет подсвечена

.def snd_delay_l = r25 ; Длительность звукового сигнала в 5мс интервалах

; r26, r27 - X (не задействован)
; r28, r29 - Y (используется в ЦНХ)
; r30, r31 - Z (используется везде)
;-------

;------- Макросы
.macro CS_LOW
	cbi PORTB, 1
	nop
.endm
.macro CS_HIGH
	sbi PORTB, 1
	nop
.endm
.macro LED_ON
	sbi PORTC, 1
	nop
.endm
.macro LED_OFF
	cbi PORTC, 1
	nop
.endm
.macro CMD_SET
	cbi PORTB, 0
	nop
.endm
.macro DATA_SET
	sbi PORTB, 0
	nop
.endm
.macro LCD_RESET_LOW
	cbi PORTC, 0
	nop
.endm
.macro LCD_RESET_HIGH
	sbi PORTC, 0
	nop
.endm
.macro LAPZ
	ldi ZH, high(@0 << 1)
	ldi ZL, low(@0 << 1)
.endm
.macro LASZ
	ldi ZH, high(@0)
	ldi ZL, low(@0)
.endm
.macro INVCOL
	sbi GPIOR0, 7
.endm
.macro NORMCOL
	cbi GPIOR0, 7
.endm
.macro beep_off
	rcall sound_off
.endm
.macro beep_on
	rcall sound_on
.endm
.macro scale2x
	ori wflags, 0x01
.endm
.macro scale1x
	andi wflags, 0xFE
.endm
;-------


